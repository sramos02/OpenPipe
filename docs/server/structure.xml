<?xml version="1.0" encoding="utf-8"?>
<project version="2.0.0a1" title="">
  <file path="php/OpenPipe/Adapter/Abstract.php" hash="a7cb290c9a8138615b71b2f033a87d41" package="OpenPipe\Adapter">
    <docblock line="5">
      <description><![CDATA[Represents an abstract OpenPipe adapter. As an abstract class it provides basic services for obtaining the layout (root object for pipelets), and generating
output for pipelets that are requested. Any object which extends this class will implement the getLayout() and getContent() methods. This abtract class will
handle the details in regards to buffering output and sending it back to the requesting object.]]></description>
      <long-description><![CDATA[]]></long-description>
      <tag line="5" name="author" description="Sean Kenny &lt;skenny214@gmail.com&gt;"/>
      <tag line="5" name="package" description="OpenPipe_Adapter"/>
      <tag line="5" name="license" description="(c) 2011-2012 Sean Kenny, Southern Connecticut State University (SCSU)."/>
      <tag line="5" name="version" description="1.0.0"/>
    </docblock>
    <include line="3" type="Require Once" package="Default">
      <name>Interface.php</name>
    </include>
    <class final="false" abstract="true" namespace="default" line="14" package="OpenPipe\Adapter">
      <name>OpenPipe_Adapter_Abstract</name>
      <full_name>\OpenPipe_Adapter_Abstract</full_name>
      <extends/>
      <extends>\OpenPipe_Adapter_Interface</extends>
      <docblock line="5">
        <description><![CDATA[Represents an abstract OpenPipe adapter. As an abstract class it provides basic services for obtaining the layout (root object for pipelets), and generating
output for pipelets that are requested. Any object which extends this class will implement the getLayout() and getContent() methods. This abtract class will
handle the details in regards to buffering output and sending it back to the requesting object.]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="5" name="author" description="Sean Kenny &lt;skenny214@gmail.com&gt;"/>
        <tag line="5" name="package" description="OpenPipe_Adapter"/>
        <tag line="5" name="license" description="(c) 2011-2012 Sean Kenny, Southern Connecticut State University (SCSU)."/>
        <tag line="5" name="version" description="1.0.0"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="21" package="">
        <name>getOutput</name>
        <type>function</type>
        <docblock line="16">
          <description><![CDATA[Returns output for the given pipelet - Output is web content (html, css, javascript) - If Pipelet is null then the layout is generated.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="16" name="param" description="if not specified then the adapter will generate the pipelet layout by default" type="\OpenPipe_Pipelet_Interface|null" variable="$pipelet">
            <type by_reference="false">\OpenPipe_Pipelet_Interface</type>
            <type by_reference="false">null</type>
          </tag>
          <tag line="16" name="return" description="given string output either generated for layout or a OpenPipe_Pipelet_Interface with output set" type="string|\OpenPipe_Pipelet_Interface">
            <type by_reference="false">string</type>
            <type by_reference="false">\OpenPipe_Pipelet_Interface</type>
          </tag>
        </docblock>
        <argument line="21">
          <name>$pipelet</name>
          <default><![CDATA[null]]></default>
          <type>OpenPipe_Pipelet_Interface</type>
        </argument>
      </method>
      <method final="false" abstract="true" static="false" visibility="protected" namespace="default" line="50" package="">
        <name>getLayout</name>
        <type>function</type>
        <docblock line="46">
          <description><![CDATA[Method should return the layout for the given web request]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="46" name="return" description="the root layout for all pipelets to be derived from" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="true" static="false" visibility="protected" namespace="default" line="57" package="">
        <name>getContent</name>
        <type>function</type>
        <docblock line="52">
          <description><![CDATA[Method should return the layout for the given web request]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="52" name="param" description="the pipelet to get content from" type="\OpenPipe_Pipelet_Interface" variable="$pipelet">
            <type by_reference="false">\OpenPipe_Pipelet_Interface</type>
          </tag>
          <tag line="52" name="return" description="the root layout for all pipelets to be derived from" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="57">
          <name>$pipelet</name>
          <default><![CDATA[]]></default>
          <type>OpenPipe_Pipelet_Interface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="63" package="">
        <name>bootstrap</name>
        <type>function</type>
        <docblock line="60">
          <description><![CDATA[This abstract class does not provided any bootstrapping logic]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="68" package="">
        <name>clean</name>
        <type>function</type>
        <docblock line="65">
          <description><![CDATA[This abstract class does not provided any Script logic]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </method>
    </class>
  </file>
  <file path="php/OpenPipe/Adapter/Basic.php" hash="c84626651c76eb45d47646e0e79d7f9f" package="OpenPipe\Adapter">
    <docblock line="5">
      <description><![CDATA[A basic adapter which provides an implementation of the abstract adapter class. It simply loads layouts and piplets from known directories given during
the constructor process]]></description>
      <long-description><![CDATA[]]></long-description>
      <tag line="5" name="author" description="Sean Kenny &lt;skenny214@gmail.com&gt;"/>
      <tag line="5" name="package" description="OpenPipe_Adapter"/>
      <tag line="5" name="license" description="(c) 2011-2012 Sean Kenny, Southern Connecticut State University (SCSU)."/>
      <tag line="5" name="version" description="1.0.0"/>
    </docblock>
    <include line="3" type="Require Once" package="Default">
      <name>Abstract.php</name>
    </include>
    <class final="false" abstract="false" namespace="default" line="13" package="OpenPipe\Adapter">
      <name>OpenPipe_Adapter_Basic</name>
      <full_name>\OpenPipe_Adapter_Basic</full_name>
      <extends>\OpenPipe_Adapter_Abstract</extends>
      <docblock line="5">
        <description><![CDATA[A basic adapter which provides an implementation of the abstract adapter class. It simply loads layouts and piplets from known directories given during
the constructor process]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="5" name="author" description="Sean Kenny &lt;skenny214@gmail.com&gt;"/>
        <tag line="5" name="package" description="OpenPipe_Adapter"/>
        <tag line="5" name="license" description="(c) 2011-2012 Sean Kenny, Southern Connecticut State University (SCSU)."/>
        <tag line="5" name="version" description="1.0.0"/>
      </docblock>
      <property final="false" static="false" visibility="public" line="19" package="Default">
        <name>$layoutsPath</name>
        <default><![CDATA[]]></default>
        <docblock line="15">
          <description><![CDATA[The full path to the layouts php files that will be loaded by this adapter]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="15" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="25" package="Default">
        <name>$pipeletsPath</name>
        <default><![CDATA[]]></default>
        <docblock line="21">
          <description><![CDATA[The full path to the pipelets php files that will be loaded by this adapter]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="21" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="32" package="">
        <name>__construct</name>
        <type>function</type>
        <docblock line="27">
          <description><![CDATA[Constructs a new Basic pipe adapter]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="27" name="param" description="the full path to the layouts php file that will be loaded by this adapter" type="string" variable="$layoutsPath">
            <type by_reference="false">string</type>
          </tag>
          <tag line="27" name="param" description="the full path to the pipelet php files that will be loaded by this adapter" type="string" variable="$pipeletsPath">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="32">
          <name>$layoutsPath</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="32">
          <name>$pipeletsPath</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="42" package="">
        <name>getLayout</name>
        <type>function</type>
        <docblock line="37">
          <description><![CDATA[loads a php layout via include()]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="37" name="param" description="the id of the layout to be used - An id is the filename without the php extension - For example default.php would be default" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="37" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="42">
          <name>$id</name>
          <default><![CDATA['default']]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="51" package="">
        <name>getContent</name>
        <type>function</type>
        <docblock line="46">
          <description><![CDATA[loads a php pipelet via include()]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="46" name="param" description="the pipelet to load content for" type="\OpenPipe_Pipelet_Interface" variable="$pipelet">
            <type by_reference="false">\OpenPipe_Pipelet_Interface</type>
          </tag>
          <tag line="46" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="51">
          <name>$pipelet</name>
          <default><![CDATA[]]></default>
          <type>OpenPipe_Pipelet_Interface</type>
        </argument>
      </method>
    </class>
  </file>
  <file path="php/OpenPipe/Adapter/Interface.php" hash="d4ac2df087787577e451530278898b9b" package="OpenPipe\Adapter">
    <docblock line="3">
      <description><![CDATA[An interface defining an adapter which bridges php based applications with OpenPipe. OpenPipe will call the adapter to load layouts and pipelets.]]></description>
      <long-description><![CDATA[<p>In essence the adapter is responsible for making sure that the php based application is instantiated, bootstrapped, and run appropriately to obtain
the request element (either layout or pipelet)</p>]]></long-description>
      <tag line="3" name="author" description="Sean Kenny &lt;skenny214@gmail.com&gt;"/>
      <tag line="3" name="package" description="OpenPipe_Adapter"/>
      <tag line="3" name="license" description="(c) 2011-2012 Sean Kenny, Southern Connecticut State University (SCSU)."/>
      <tag line="3" name="version" description="1.0.0"/>
    </docblock>
    <interface namespace="default" line="12" package="OpenPipe\Adapter">
      <name>OpenPipe_Adapter_Interface</name>
      <full_name>\OpenPipe_Adapter_Interface</full_name>
      <extends/>
      <docblock line="3">
        <description><![CDATA[An interface defining an adapter which bridges php based applications with OpenPipe. OpenPipe will call the adapter to load layouts and pipelets.]]></description>
        <long-description><![CDATA[<p>In essence the adapter is responsible for making sure that the php based application is instantiated, bootstrapped, and run appropriately to obtain
the request element (either layout or pipelet)</p>]]></long-description>
        <tag line="3" name="author" description="Sean Kenny &lt;skenny214@gmail.com&gt;"/>
        <tag line="3" name="package" description="OpenPipe_Adapter"/>
        <tag line="3" name="license" description="(c) 2011-2012 Sean Kenny, Southern Connecticut State University (SCSU)."/>
        <tag line="3" name="version" description="1.0.0"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="19" package="">
        <name>getOutput</name>
        <type>function</type>
        <docblock line="14">
          <description><![CDATA[return output from the php application for immediate piping]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="14" name="param" description="a pipelet which supplies information on" type="\OpenPipe_Pipelet_Interface" variable="$pipelet">
            <type by_reference="false">\OpenPipe_Pipelet_Interface</type>
          </tag>
          <tag line="14" name="return" description="implementors are free to return what they will" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="19">
          <name>$pipelet</name>
          <default><![CDATA[]]></default>
          <type>OpenPipe_Pipelet_Interface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="24" package="">
        <name>bootstrap</name>
        <type>function</type>
        <docblock line="21">
          <description><![CDATA[called once during the initialization of an OpenPipe runner]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="29" package="">
        <name>clean</name>
        <type>function</type>
        <docblock line="26">
          <description><![CDATA[called once during the shut down of an OpenPipe runner]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </method>
    </interface>
  </file>
  <file path="php/OpenPipe/Adapter/Pvc/CodeIgniter.php" hash="2e86c21c291aa6899bc2998fa7b58140" package="OpenPipe\Adapter">
    <docblock line="9">
      <description><![CDATA[A PMVC adapter which provides an implementation of for CodeIgniter 2.x applications to take advantage of piped output]]></description>
      <long-description><![CDATA[]]></long-description>
      <tag line="9" name="author" description="Sean Kenny &lt;skenny214@gmail.com&gt;"/>
      <tag line="9" name="package" description="OpenPipe_Adapter"/>
      <tag line="9" name="license" description="(c) 2011-2012 Sean Kenny, Southern Connecticut State University (SCSU)."/>
      <tag line="9" name="version" description="1.0.0"/>
    </docblock>
    <include line="3" type="Require Once" package="Default">
      <name>/../Abstract.php</name>
    </include>
    <class final="false" abstract="false" namespace="default" line="16" package="OpenPipe\Adapter">
      <name>OpenPipe_Adapter_Pvc_CodeIgniter</name>
      <full_name>\OpenPipe_Adapter_Pvc_CodeIgniter</full_name>
      <extends>\OpenPipe_Adapter_Abstract</extends>
      <docblock line="9">
        <description><![CDATA[A PMVC adapter which provides an implementation of for CodeIgniter 2.x applications to take advantage of piped output]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="9" name="author" description="Sean Kenny &lt;skenny214@gmail.com&gt;"/>
        <tag line="9" name="package" description="OpenPipe_Adapter"/>
        <tag line="9" name="license" description="(c) 2011-2012 Sean Kenny, Southern Connecticut State University (SCSU)."/>
        <tag line="9" name="version" description="1.0.0"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="22" package="Default">
        <name>$appRootPath</name>
        <default><![CDATA[]]></default>
        <docblock line="18">
          <description><![CDATA[The root path of the currently active CodeIgniter application]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="18" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="29" package="Default">
        <name>$indexFileName</name>
        <default><![CDATA[]]></default>
        <docblock line="25">
          <description><![CDATA[The file name within the $appRootPath that bootstraps and runs a CodeIgniter application]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="25" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="37" package="">
        <name>__construct</name>
        <type>function</type>
        <docblock line="31">
          <description><![CDATA[Constructs a new CodeIgniter pipe adapter]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="31" name="param" description="the root path of the currently active CodeIgniter application" type="string" variable="$appRootPath">
            <type by_reference="false">string</type>
          </tag>
          <tag line="31" name="param" description="the file name within the $appRootPath that bootstraps and runs a CodeIgniter application" type="string" variable="$indexFileName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="31" name="return" description="new instance of this object" type="\OpenPipe_Adapter_Pvc_CodeIgniter">
            <type by_reference="false">\OpenPipe_Adapter_Pvc_CodeIgniter</type>
          </tag>
        </docblock>
        <argument line="37">
          <name>$appRootPath</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="37">
          <name>$indexFileName</name>
          <default><![CDATA['index.pipe.php']]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="45" package="">
        <name>getLayout</name>
        <type>function</type>
        <docblock line="42">
          <description><![CDATA[loads a php layout by starting the code igniter index file]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="55" package="">
        <name>getContent</name>
        <type>function</type>
        <docblock line="51">
          <description><![CDATA[loads a php pipelet via CodeIgniter controller - being sure to play nice with output class]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="51" name="param" description="the pipelet to be used." type="\OpenPipe_Pipelet_Interface" variable="$pipelet">
            <type by_reference="false">\OpenPipe_Pipelet_Interface</type>
          </tag>
        </docblock>
        <argument line="55">
          <name>$pipelet</name>
          <default><![CDATA[]]></default>
          <type>OpenPipe_Pipelet_Interface</type>
        </argument>
      </method>
    </class>
  </file>
  <file path="php/OpenPipe/Output/Interface.php" hash="da4f3aa70763028a4849889127e23133" package="OpenPipe\Pipelet">
    <docblock line="3">
      <description><![CDATA[An interface defining the output mechanism for OpenPipe. This abstraction allows for the implementing class to handle individual pipelet output appropriately]]></description>
      <long-description><![CDATA[]]></long-description>
      <tag line="3" name="author" description="Sean Kenny &lt;skenny214@gmail.com&gt;"/>
      <tag line="3" name="package" description="OpenPipe_Pipelet"/>
      <tag line="3" name="license" description="(c) 2011-2012 Sean Kenny, Southern Connecticut State University (SCSU)."/>
      <tag line="3" name="version" description="1.0.0"/>
    </docblock>
    <interface namespace="default" line="10" package="OpenPipe\Pipelet">
      <name>OpenPipe_Output_Interface</name>
      <full_name>\OpenPipe_Output_Interface</full_name>
      <extends/>
      <docblock line="3">
        <description><![CDATA[An interface defining the output mechanism for OpenPipe. This abstraction allows for the implementing class to handle individual pipelet output appropriately]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="3" name="author" description="Sean Kenny &lt;skenny214@gmail.com&gt;"/>
        <tag line="3" name="package" description="OpenPipe_Pipelet"/>
        <tag line="3" name="license" description="(c) 2011-2012 Sean Kenny, Southern Connecticut State University (SCSU)."/>
        <tag line="3" name="version" description="1.0.0"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="15" package="">
        <name>bootstrap</name>
        <type>function</type>
        <docblock line="12">
          <description><![CDATA[Allow implementor to setup/output any data before the content phase begins]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="21" package="">
        <name>preContent</name>
        <type>function</type>
        <docblock line="18">
          <description><![CDATA[Called immediately before any content is to be outputted via the associated content() method]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="28" package="">
        <name>content</name>
        <type>function</type>
        <docblock line="24">
          <description><![CDATA[Called when content is ready for output - This content is already generated HTML string]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="24" name="param" description="html data" type="string" variable="$content">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="28">
          <name>$content</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="34" package="">
        <name>phaseComplete</name>
        <type>function</type>
        <docblock line="30">
          <description><![CDATA[Called when an output phase is complete -A phase represents a layer of data (each layer of data can contain n number of deeper layers)]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="30" name="param" description="the number of the phase to mark complete" type="int" variable="$phase">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="34">
          <name>$phase</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="40" package="">
        <name>postContent</name>
        <type>function</type>
        <docblock line="37">
          <description><![CDATA[Called immediately after all data has been sent for output]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="46" package="">
        <name>clean</name>
        <type>function</type>
        <docblock line="43">
          <description><![CDATA[Allows implementor to do any final cleanup/output - last step in the output process]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </method>
    </interface>
  </file>
  <file path="php/OpenPipe/Output/Piped.php" hash="9d0e27cb34f0f75691ee0399683095e6" package="OpenPipe\Output">
    <docblock line="6">
      <description><![CDATA[Implementation of an OpenPipe output interface that sends data via an HTTP pipeline.]]></description>
      <long-description><![CDATA[<p>This is done by loading the openpipe.js client library and associated libraries.
The output handler handles extracting pipelet html data, and transmitting it as packed JSON object -
which will be unpacked by the client openpipe.js library</p>]]></long-description>
      <tag line="6" name="author" description="Sean Kenny &lt;skenny214@gmail.com&gt;"/>
      <tag line="6" name="package" description="OpenPipe_Output"/>
      <tag line="6" name="license" description="(c) 2011-2012 Sean Kenny, Southern Connecticut State University (SCSU)."/>
      <tag line="6" name="version" description="1.0.0"/>
    </docblock>
    <include line="3" type="Require Once" package="Default">
      <name>Interface.php</name>
    </include>
    <include line="4" type="Require Once" package="Default">
      <name>Util.php</name>
    </include>
    <class final="false" abstract="false" namespace="default" line="16" package="OpenPipe\Output">
      <name>OpenPipe_Output_Piped</name>
      <full_name>\OpenPipe_Output_Piped</full_name>
      <extends/>
      <extends>\OpenPipe_Output_Interface</extends>
      <docblock line="6">
        <description><![CDATA[Implementation of an OpenPipe output interface that sends data via an HTTP pipeline.]]></description>
        <long-description><![CDATA[<p>This is done by loading the openpipe.js client library and associated libraries.
The output handler handles extracting pipelet html data, and transmitting it as packed JSON object -
which will be unpacked by the client openpipe.js library</p>]]></long-description>
        <tag line="6" name="author" description="Sean Kenny &lt;skenny214@gmail.com&gt;"/>
        <tag line="6" name="package" description="OpenPipe_Output"/>
        <tag line="6" name="license" description="(c) 2011-2012 Sean Kenny, Southern Connecticut State University (SCSU)."/>
        <tag line="6" name="version" description="1.0.0"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="22" package="Default">
        <name>$jsPath</name>
        <default><![CDATA[]]></default>
        <docblock line="18">
          <description><![CDATA[the web path where the client openpipejs library will reside]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="18" name="var" description="the" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="29" package="">
        <name>__construct</name>
        <type>function</type>
        <docblock line="25">
          <description><![CDATA[Builds an Piped output object]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="25" name="param" description="the web path to the openpipejs client library" type="string" variable="$jsPath">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="29">
          <name>$jsPath</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="37" package="">
        <name>bootstrap</name>
        <type>function</type>
        <docblock line="34">
          <description><![CDATA[Sends an initial string of output to force php and the browser to display piped output immediately]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="47" package="">
        <name>preContent</name>
        <type>function</type>
        <docblock line="44">
          <description><![CDATA[Outputs the framework for an HTTP Pipeline HTML document - this is essentially html and Javascript libraries - Note the html is unclosed (no ending body and html tags)]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="63" package="">
        <name>content</name>
        <type>function</type>
        <docblock line="59">
          <description><![CDATA[Extracts and outputs data in an openpipe.js friendly way]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="59" name="param" description="the content to be piped immediately - If CSS/JS is contained within the content this will be extracted and handled automatically" type="string" variable="$content">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="63">
          <name>$content</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="89" package="">
        <name>phaseComplete</name>
        <type>function</type>
        <docblock line="85">
          <description><![CDATA[Handles a phase complete signal by sending the openpipejs phaseComplete command to the client browser]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="85" name="param" description="the number of the phase that has been completed" type="int" variable="$phase">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="89">
          <name>$phase</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="97" package="">
        <name>postContent</name>
        <type>function</type>
        <docblock line="94">
          <description><![CDATA[Outputs the closing framework elements for an HTTP Pipeline HTML document - sends shutdown (done) method for client library and close initially open body and html tags]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="106" package="">
        <name>clean</name>
        <type>function</type>
        <docblock line="103">
          <description><![CDATA[This handler is always fresh and so clean clean]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </method>
    </class>
  </file>
  <file path="php/OpenPipe/Output/Standard.php" hash="f01a4107fa6be9ae890c7cf33bce68d8" package="OpenPipe\Output">
    <docblock line="6">
      <description><![CDATA[Implementation of an OpenPipe output interface that sends data as a standard HTML document
Content pieces are used to construct a complete HTML document, placing CSS and JavaScript in proper
placement, and inject each content piece within a pipelet place holder on the server side. It's
important to note that no javascript is required to complete output on the client web browser while
utilizing this output implementation]]></description>
      <long-description><![CDATA[]]></long-description>
      <tag line="6" name="author" description="Sean Kenny &lt;skenny214@gmail.com&gt;"/>
      <tag line="6" name="package" description="OpenPipe_Output"/>
      <tag line="6" name="license" description="(c) 2011-2012 Sean Kenny, Southern Connecticut State University (SCSU)."/>
      <tag line="6" name="version" description="1.0.0"/>
    </docblock>
    <include line="3" type="Require Once" package="Default">
      <name>Interface.php</name>
    </include>
    <include line="4" type="Require Once" package="Default">
      <name>Util.php</name>
    </include>
    <class final="false" abstract="false" namespace="default" line="17" package="OpenPipe\Output">
      <name>OpenPipe_Output_Standard</name>
      <full_name>\OpenPipe_Output_Standard</full_name>
      <extends/>
      <extends>\OpenPipe_Output_Interface</extends>
      <docblock line="6">
        <description><![CDATA[Implementation of an OpenPipe output interface that sends data as a standard HTML document
Content pieces are used to construct a complete HTML document, placing CSS and JavaScript in proper
placement, and inject each content piece within a pipelet place holder on the server side. It's
important to note that no javascript is required to complete output on the client web browser while
utilizing this output implementation]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="6" name="author" description="Sean Kenny &lt;skenny214@gmail.com&gt;"/>
        <tag line="6" name="package" description="OpenPipe_Output"/>
        <tag line="6" name="license" description="(c) 2011-2012 Sean Kenny, Southern Connecticut State University (SCSU)."/>
        <tag line="6" name="version" description="1.0.0"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="23" package="Default">
        <name>$styles</name>
        <default><![CDATA[]]></default>
        <docblock line="19">
          <description><![CDATA[linear array of style tags extracted from content and stored as string data]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="19" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="29" package="Default">
        <name>$links</name>
        <default><![CDATA[]]></default>
        <docblock line="25">
          <description><![CDATA[linear array of link tags extracted from content and stored as string data]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="25" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="35" package="Default">
        <name>$scripts</name>
        <default><![CDATA[]]></default>
        <docblock line="31">
          <description><![CDATA[linear array of script tags extracted from content and stored as string data]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="31" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="41" package="Default">
        <name>$content</name>
        <default><![CDATA[]]></default>
        <docblock line="37">
          <description><![CDATA[main html content stored as string and injected piece by piece as new content becomes available]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="37" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="47" package="">
        <name>bootstrap</name>
        <type>function</type>
        <docblock line="44">
          <description><![CDATA[Setup all the variables that will be needed to generate proper output]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="58" package="">
        <name>preContent</name>
        <type>function</type>
        <docblock line="55">
          <description><![CDATA[because standard output does not send any output until the end (clean method) - This method is not needed]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="67" package="">
        <name>content</name>
        <type>function</type>
        <docblock line="63">
          <description><![CDATA[takes content and builds an complete html document piece by piece]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="63" name="param" description="the html content that will have data extracted and assigned for final output" type="string|\OpenPipe_Pipelet_Interface" variable="$content">
            <type by_reference="false">string</type>
            <type by_reference="false">\OpenPipe_Pipelet_Interface</type>
          </tag>
        </docblock>
        <argument line="67">
          <name>$content</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="89" package="">
        <name>phaseComplete</name>
        <type>function</type>
        <docblock line="85">
          <description><![CDATA[because standard output does not send any output until the end (clean method) - This method is not needed]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="85" name="param" description="phase not needed" type="int" variable="$phase">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="89">
          <name>$phase</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="97" package="">
        <name>postContent</name>
        <type>function</type>
        <docblock line="94">
          <description><![CDATA[because standard output does not send any output until the end (clean method) - This method is not needed]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="105" package="">
        <name>clean</name>
        <type>function</type>
        <docblock line="102">
          <description><![CDATA[Takes all of the gathered output and send the final html document as part of this last step]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="139" package="">
        <name>injectHtml</name>
        <type>function</type>
        <docblock line="134">
          <description><![CDATA[Attempts to inject the given html data into the currently recorded data - The point of injection is determined by the id provided]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="134" name="param" description="the identifier for the pipelet that will have html content injected within it" type="string" variable="$pipeletId">
            <type by_reference="false">string</type>
          </tag>
          <tag line="134" name="param" description="the content that will be injected into the current gathered output" type="string" variable="$html">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="139">
          <name>$pipeletId</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="139">
          <name>$html</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="php/OpenPipe/Output/Util.php" hash="eb63d73dab792feb5f99a7ac7b8a75d6" package="OpenPipe\Output">
    <docblock line="3">
      <description><![CDATA[Utility object which provides reusable output based services for HTTP Pipeline based systems]]></description>
      <long-description><![CDATA[]]></long-description>
      <tag line="3" name="author" description="Sean Kenny &lt;skenny214@gmail.com&gt;"/>
      <tag line="3" name="package" description="OpenPipe_Output"/>
      <tag line="3" name="license" description="(c) 2011-2012 Sean Kenny, Southern Connecticut State University (SCSU)."/>
      <tag line="3" name="version" description="1.0.0"/>
    </docblock>
    <class final="false" abstract="false" namespace="default" line="10" package="OpenPipe\Output">
      <name>OpenPipe_Output_Util</name>
      <full_name>\OpenPipe_Output_Util</full_name>
      <extends/>
      <docblock line="3">
        <description><![CDATA[Utility object which provides reusable output based services for HTTP Pipeline based systems]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="3" name="author" description="Sean Kenny &lt;skenny214@gmail.com&gt;"/>
        <tag line="3" name="package" description="OpenPipe_Output"/>
        <tag line="3" name="license" description="(c) 2011-2012 Sean Kenny, Southern Connecticut State University (SCSU)."/>
        <tag line="3" name="version" description="1.0.0"/>
      </docblock>
      <method final="false" abstract="false" static="true" visibility="public" namespace="default" line="17" package="">
        <name>extractLinkTags</name>
        <type>function</type>
        <docblock line="12">
          <description><![CDATA[Given an html string extract the link information from the raw data and return]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="12" name="param" description="the html string to extract script tags from" type="string" variable="$html">
            <type by_reference="false">string</type>
          </tag>
          <tag line="12" name="return" description="strings containing link tags found within the html string" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="17">
          <name>$html</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="default" line="35" package="">
        <name>extractStyleTags</name>
        <type>function</type>
        <docblock line="30">
          <description><![CDATA[Given an html string extract the style information from the raw data and return]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="30" name="param" description="the html string to extract style tags from" type="string" variable="$html">
            <type by_reference="false">string</type>
          </tag>
          <tag line="30" name="return" description="strings containing style tags found within the html string" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="35">
          <name>$html</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="default" line="53" package="">
        <name>extractScriptTags</name>
        <type>function</type>
        <docblock line="48">
          <description><![CDATA[Given an html string extract the  information from the raw data and return]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="48" name="param" description="the html string to extract script tags from" type="string" variable="$html">
            <type by_reference="false">string</type>
          </tag>
          <tag line="48" name="return" description="strings containing script tags found within the html string" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="53">
          <name>$html</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="default" line="75" package="">
        <name>echoJsNow</name>
        <type>function</type>
        <docblock line="68">
          <description><![CDATA[Outputs javascript data in piped format - Piped format implies minimized and able to be placed in a pipe JavaScript array]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="68" name="param" description="the output data (javascript) to be wrapped in a javascript tagged and echoed immediately" type="string" variable="$output">
            <type by_reference="false">string</type>
          </tag>
          <tag line="68" name="param" description="wrap the output in a script opening and closing tag" type="boolean" variable="$wrapTags">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="68" name="param" description="the size of the buffer currently in use - used to determine how much passing must be used for output to skip buffering" type="int|null" variable="$outputBufferSize">
            <type by_reference="false">int</type>
            <type by_reference="false">null</type>
          </tag>
          <tag line="68" name="param" description="the character that will be used if padding must occur" type="string" variable="$paddingCharacter">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="75">
          <name>$output</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="75">
          <name>$wrapTags</name>
          <default><![CDATA[true]]></default>
          <type/>
        </argument>
        <argument line="75">
          <name>$outputBufferSize</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
        <argument line="75">
          <name>$paddingCharacter</name>
          <default><![CDATA[' ']]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="default" line="91" package="">
        <name>echoNow</name>
        <type>function</type>
        <docblock line="83">
          <description><![CDATA[Highly reusable output method which echos data NOW - by NOW we mean in an intelligent way that takes into account output buffering in PHP
as well as browser based deferred display of data (until data is of x bytes) - Using this utility method one should not have to worry about how
to immediately send data to an end client browser NOW]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="83" name="param" description="the data to output NOW!" type="string" variable="$output">
            <type by_reference="false">string</type>
          </tag>
          <tag line="83" name="param" description="the output buffer currently in use -if a string is not of an output buffer length it will be padded to meet the minimum buffer size - If not provided this value will be looked up from the PHP ini configuration value" type="int|null" variable="$outputBufferSize">
            <type by_reference="false">int</type>
            <type by_reference="false">null</type>
          </tag>
          <tag line="83" name="param" description="the character to pad output with if the buffer is larger than the data to output" type="string" variable="$paddingCharacter">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="91">
          <name>$output</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="91">
          <name>$outputBufferSize</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
        <argument line="91">
          <name>$paddingCharacter</name>
          <default><![CDATA[' ']]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="php/OpenPipe/Pipelet/Abstract.php" hash="67caf01add5c31371030d4fdff07e224" package="OpenPipe\Pipelet">
    <docblock line="5">
      <description><![CDATA[Abstract implementation of the OpenPipe_Pipelet_Interface. Provided basic bindings for all methods defined in the interface.]]></description>
      <long-description><![CDATA[]]></long-description>
      <tag line="5" name="author" description="Sean Kenny &lt;skenny214@gmail.com&gt;"/>
      <tag line="5" name="package" description="OpenPipe_Pipelet"/>
      <tag line="5" name="license" description="(c) 2011-2012 Sean Kenny, Southern Connecticut State University (SCSU)."/>
      <tag line="5" name="version" description="1.0.0"/>
    </docblock>
    <include line="3" type="Require Once" package="Default">
      <name>Interface.php</name>
    </include>
    <class final="false" abstract="true" namespace="default" line="12" package="OpenPipe\Pipelet">
      <name>OpenPipe_Pipelet_Abstract</name>
      <full_name>\OpenPipe_Pipelet_Abstract</full_name>
      <extends/>
      <extends>\OpenPipe_Pipelet_Interface</extends>
      <docblock line="5">
        <description><![CDATA[Abstract implementation of the OpenPipe_Pipelet_Interface. Provided basic bindings for all methods defined in the interface.]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="5" name="author" description="Sean Kenny &lt;skenny214@gmail.com&gt;"/>
        <tag line="5" name="package" description="OpenPipe_Pipelet"/>
        <tag line="5" name="license" description="(c) 2011-2012 Sean Kenny, Southern Connecticut State University (SCSU)."/>
        <tag line="5" name="version" description="1.0.0"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="18" package="Default">
        <name>$id</name>
        <default><![CDATA[]]></default>
        <docblock line="14">
          <description><![CDATA[The unique identifier for this pipelet - that distinguishes it from all others.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="14" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="24" package="Default">
        <name>$phase</name>
        <default><![CDATA[]]></default>
        <docblock line="20">
          <description><![CDATA[The numbered phase of the pipelet to signify priority low-to-high]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="20" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="31" package="Default">
        <name>$output</name>
        <default><![CDATA[]]></default>
        <docblock line="27">
          <description><![CDATA[The output that is potentially gathered and piped as output for this pipelet]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="27" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="38" package="">
        <name>setId</name>
        <type>function</type>
        <docblock line="34">
          <description><![CDATA[Sets the id of the pipelet (used to determine what content to gather from a Pipe Adapter)]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="34" name="param" description="a unique identifier for the pipelet that will signify importance to the client adapter and allow data to be looked up/generated accordingly" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="38">
          <name>$id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="45" package="">
        <name>getId</name>
        <type>function</type>
        <docblock line="42">
          <description><![CDATA[Returns the current set pipelet id]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="54" package="">
        <name>setPhase</name>
        <type>function</type>
        <docblock line="50">
          <description><![CDATA[Sets the phase of the pipelet (used to determine loading priorities and sequences)]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="50" name="param" description="to set - Lower numbers are higher priority (1), than higher numbers (999)" type="int|string" variable="$phase">
            <type by_reference="false">int</type>
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="54">
          <name>$phase</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="61" package="">
        <name>getPhase</name>
        <type>function</type>
        <docblock line="58">
          <description><![CDATA[Return the current set phase number]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="70" package="">
        <name>setOutput</name>
        <type>function</type>
        <docblock line="66">
          <description><![CDATA[Set the output that has been gathered for this pipelet from a Pipelet_Adapter]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="66" name="param" description="the output string that has been generated/gathered for this given pipelet" type="string" variable="$output">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="70">
          <name>$output</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="77" package="">
        <name>getOutput</name>
        <type>function</type>
        <docblock line="74">
          <description><![CDATA[Return the output that is currently set for the pipelet]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </method>
    </class>
  </file>
  <file path="php/OpenPipe/Pipelet/Base.php" hash="ee3f6ef958fc02baf18d09ec8402f737" package="OpenPipe\Pipelet">
    <docblock line="5">
      <description><![CDATA[Provided a basic extension off of the OpenPipe_Pipelet_Abstract convenience implementation]]></description>
      <long-description><![CDATA[]]></long-description>
      <tag line="5" name="author" description="Sean Kenny &lt;skenny214@gmail.com&gt;"/>
      <tag line="5" name="package" description="OpenPipe_Pipelet"/>
      <tag line="5" name="license" description="(c) 2011-2012 Sean Kenny, Southern Connecticut State University (SCSU)."/>
      <tag line="5" name="version" description="1.0.0"/>
    </docblock>
    <include line="3" type="Require Once" package="Default">
      <name>Abstract.php</name>
    </include>
    <class final="false" abstract="false" namespace="default" line="12" package="OpenPipe\Pipelet">
      <name>OpenPipe_Pipelet_Base</name>
      <full_name>\OpenPipe_Pipelet_Base</full_name>
      <extends>\OpenPipe_Pipelet_Abstract</extends>
      <docblock line="5">
        <description><![CDATA[Provided a basic extension off of the OpenPipe_Pipelet_Abstract convenience implementation]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="5" name="author" description="Sean Kenny &lt;skenny214@gmail.com&gt;"/>
        <tag line="5" name="package" description="OpenPipe_Pipelet"/>
        <tag line="5" name="license" description="(c) 2011-2012 Sean Kenny, Southern Connecticut State University (SCSU)."/>
        <tag line="5" name="version" description="1.0.0"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="21" package="">
        <name>__construct</name>
        <type>function</type>
        <docblock line="15">
          <description><![CDATA[Builds the object]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="15" name="param" description="the identifier for the pipelet" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="15" name="param" description="the phase for the pipelet" type="int|string" variable="$phase">
            <type by_reference="false">int</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="15" name="return" description="new instance" type="\OpenPipe_Pipelet_Base">
            <type by_reference="false">\OpenPipe_Pipelet_Base</type>
          </tag>
        </docblock>
        <argument line="21">
          <name>$id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="21">
          <name>$phase</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="php/OpenPipe/Pipelet/Factory.php" hash="4cee6b20a03be692d3a026b2db74699e" package="OpenPipe\Pipelet">
    <docblock line="5">
      <description><![CDATA[Generated pipelets using factory based methods]]></description>
      <long-description><![CDATA[]]></long-description>
      <tag line="5" name="author" description="Sean Kenny &lt;skenny214@gmail.com&gt;"/>
      <tag line="5" name="package" description="OpenPipe_Pipelet"/>
      <tag line="5" name="license" description="(c) 2011-2012 Sean Kenny, Southern Connecticut State University (SCSU)."/>
      <tag line="5" name="version" description="1.0.0"/>
    </docblock>
    <include line="3" type="Require Once" package="Default">
      <name>Base.php</name>
    </include>
    <class final="false" abstract="false" namespace="default" line="12" package="OpenPipe\Pipelet">
      <name>OpenPipe_Pipelet_Factory</name>
      <full_name>\OpenPipe_Pipelet_Factory</full_name>
      <extends/>
      <docblock line="5">
        <description><![CDATA[Generated pipelets using factory based methods]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="5" name="author" description="Sean Kenny &lt;skenny214@gmail.com&gt;"/>
        <tag line="5" name="package" description="OpenPipe_Pipelet"/>
        <tag line="5" name="license" description="(c) 2011-2012 Sean Kenny, Southern Connecticut State University (SCSU)."/>
        <tag line="5" name="version" description="1.0.0"/>
      </docblock>
      <method final="false" abstract="false" static="true" visibility="public" namespace="default" line="21" package="">
        <name>buildFromHtml</name>
        <type>function</type>
        <docblock line="15">
          <description><![CDATA[Extracts an array of pipelets from an given HTML document (represented as s string)]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="15" name="param" description="An html document represented via string" type="string" variable="$html">
            <type by_reference="false">string</type>
          </tag>
          <tag line="15" name="param" description="The current phase of the pipelet loading process - This is assigned to any loaded pipelets extracted from the first html string parameter" type="int|string" variable="$phase">
            <type by_reference="false">int</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="15" name="return" description="all pipelets extracted from the HTML input and instantiated as OpenPipe_Pipelet_Base objects" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="21">
          <name>$html</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="21">
          <name>$phase</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="php/OpenPipe/Pipelet/Interface.php" hash="0932a29917f0cd0cfaadf73d10d863d6" package="OpenPipe\Pipelet">
    <docblock line="3">
      <description><![CDATA[An interface defining a pipelet. A pipelet is an atomic entity with an pipe based HTML layout. A pipelet is essentially a piece of content that is loaded
in a priority based sequential fashion and outputted immediately to the end client browser, without having to wait for other pipelets or sub pipelets to be
loaded as well. A pipelet's main purposed is to deliver content in modular packages that increase the, 'perceived', load time of an HTML based PHP application.]]></description>
      <long-description><![CDATA[<p>A pipelet at its core has an ID, phase, and output.
- An id is derived either from the parent layout of parent pipelet. The id is used to identify and load content from a PHP OpenPipe adapter (OpenPipe_Adapter_Interface)
- A phase is used to determine the timing and priority of a pipelet when it is received by an end client browser
- The output is any data gathered from the OpenPipe adapter (utilizing the pipelet id). This data is subsequently piped to an end client browser</p>]]></long-description>
      <tag line="3" name="author" description="Sean Kenny &lt;skenny214@gmail.com&gt;"/>
      <tag line="3" name="package" description="OpenPipe_Pipelet"/>
      <tag line="3" name="license" description="(c) 2011-2012 Sean Kenny, Southern Connecticut State University (SCSU)."/>
      <tag line="3" name="version" description="1.0.0"/>
    </docblock>
    <interface namespace="default" line="16" package="OpenPipe\Pipelet">
      <name>OpenPipe_Pipelet_Interface</name>
      <full_name>\OpenPipe_Pipelet_Interface</full_name>
      <extends/>
      <docblock line="3">
        <description><![CDATA[An interface defining a pipelet. A pipelet is an atomic entity with an pipe based HTML layout. A pipelet is essentially a piece of content that is loaded
in a priority based sequential fashion and outputted immediately to the end client browser, without having to wait for other pipelets or sub pipelets to be
loaded as well. A pipelet's main purposed is to deliver content in modular packages that increase the, 'perceived', load time of an HTML based PHP application.]]></description>
        <long-description><![CDATA[<p>A pipelet at its core has an ID, phase, and output.
- An id is derived either from the parent layout of parent pipelet. The id is used to identify and load content from a PHP OpenPipe adapter (OpenPipe_Adapter_Interface)
- A phase is used to determine the timing and priority of a pipelet when it is received by an end client browser
- The output is any data gathered from the OpenPipe adapter (utilizing the pipelet id). This data is subsequently piped to an end client browser</p>]]></long-description>
        <tag line="3" name="author" description="Sean Kenny &lt;skenny214@gmail.com&gt;"/>
        <tag line="3" name="package" description="OpenPipe_Pipelet"/>
        <tag line="3" name="license" description="(c) 2011-2012 Sean Kenny, Southern Connecticut State University (SCSU)."/>
        <tag line="3" name="version" description="1.0.0"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="22" package="">
        <name>setId</name>
        <type>function</type>
        <docblock line="18">
          <description><![CDATA[Sets the id of the pipelet (used to determine what content to gather from a Pipe Adapter)]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="18" name="param" description="a unique identifier for the pipelet that will signify importance to the client adapter and allow data to be looked up/generated accordingly" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="22">
          <name>$id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="27" package="">
        <name>getId</name>
        <type>function</type>
        <docblock line="24">
          <description><![CDATA[Returns the current set pipelet id]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="34" package="">
        <name>setPhase</name>
        <type>function</type>
        <docblock line="30">
          <description><![CDATA[Sets the phase of the pipelet (used to determine loading priorities and sequences)]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="30" name="param" description="phase to set - Lower numbers are higher priority (1), than higher numbers (999)" type="int|string" variable="$phase">
            <type by_reference="false">int</type>
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="34">
          <name>$phase</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="39" package="">
        <name>getPhase</name>
        <type>function</type>
        <docblock line="36">
          <description><![CDATA[Return the current set phase number]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="46" package="">
        <name>setOutput</name>
        <type>function</type>
        <docblock line="42">
          <description><![CDATA[Set the output that has been gathered for this pipelet from a Pipelet_Adapter]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="42" name="param" description="the output string that has been generated/gathered for this given pipelet" type="string" variable="$output">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="46">
          <name>$output</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="52" package="">
        <name>getOutput</name>
        <type>function</type>
        <docblock line="49">
          <description><![CDATA[Return the output that is currently set for the pipelet]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </method>
    </interface>
  </file>
  <file path="php/OpenPipe/Runner.php" hash="f9e7c67e1db583df168465ce737d7bf1" package="OpenPipe">
    <docblock line="7">
      <description><![CDATA[A runner is the  core object for any OpenPipe based application. A runner is responsible for gathering output from an OpenPipe_Adapter_Interface based
adapter and returning to the end client browser as piped data objects. Before sending these piped based data objects this runner also ensures that the
end client browser has been setup/instantiated appropriately by sending the CORE OpenPipe front end JavaScript libraries and the CORE HTML framework
Once constructed calling this object run() method will kickoff the OpenPipe HTTP pipelining process]]></description>
      <long-description><![CDATA[]]></long-description>
      <tag line="7" name="author" description="Sean Kenny &lt;skenny214@gmail.com&gt;"/>
      <tag line="7" name="package" description="OpenPipe"/>
      <tag line="7" name="license" description="(c) 2011-2012 Sean Kenny, Southern Connecticut State University (SCSU)."/>
      <tag line="7" name="version" description="1.0.0"/>
    </docblock>
    <include line="3" type="Require Once" package="Default">
      <name>Output/Util.php</name>
    </include>
    <include line="4" type="Require Once" package="Default">
      <name>Adapter/Interface.php</name>
    </include>
    <include line="5" type="Require Once" package="Default">
      <name>Pipelet/Factory.php</name>
    </include>
    <class final="false" abstract="false" namespace="default" line="17" package="OpenPipe">
      <name>OpenPipe_Runner</name>
      <full_name>\OpenPipe_Runner</full_name>
      <extends/>
      <docblock line="7">
        <description><![CDATA[A runner is the  core object for any OpenPipe based application. A runner is responsible for gathering output from an OpenPipe_Adapter_Interface based
adapter and returning to the end client browser as piped data objects. Before sending these piped based data objects this runner also ensures that the
end client browser has been setup/instantiated appropriately by sending the CORE OpenPipe front end JavaScript libraries and the CORE HTML framework
Once constructed calling this object run() method will kickoff the OpenPipe HTTP pipelining process]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="7" name="author" description="Sean Kenny &lt;skenny214@gmail.com&gt;"/>
        <tag line="7" name="package" description="OpenPipe"/>
        <tag line="7" name="license" description="(c) 2011-2012 Sean Kenny, Southern Connecticut State University (SCSU)."/>
        <tag line="7" name="version" description="1.0.0"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="23" package="Default">
        <name>$frameworkAdapter</name>
        <default><![CDATA[]]></default>
        <docblock line="19">
          <description><![CDATA[The OpenPipe_Adapter_Interface object that is used by this OpenPipe_Runner to gather pipelets and load individual pipelet data]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="19" name="var" description="" type="\OpenPipe_Adapter_Interface">
            <type by_reference="false">\OpenPipe_Adapter_Interface</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="29" package="Default">
        <name>$output</name>
        <default><![CDATA[]]></default>
        <docblock line="25">
          <description><![CDATA[The OpenPipe_Output_Interface object that is used by this OpenPipe_Runner to send output data to the browser]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="25" name="var" description="" type="\OpenPipe_Output_Interface">
            <type by_reference="false">\OpenPipe_Output_Interface</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="38" package="">
        <name>__construct</name>
        <type>function</type>
        <docblock line="33">
          <description><![CDATA[Constructs an OpenPipe_Runner object that communicated with the given OpenPipe_Adapter_Interface based object]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="33" name="param" description="" type="\OpenPipe_Adapter_Interface" variable="$frameworkAdapter">
            <type by_reference="false">\OpenPipe_Adapter_Interface</type>
          </tag>
          <tag line="33" name="param" description="" type="\OpenPipe_Output_Interface" variable="$output">
            <type by_reference="false">\OpenPipe_Output_Interface</type>
          </tag>
        </docblock>
        <argument line="38">
          <name>$frameworkAdapter</name>
          <default><![CDATA[]]></default>
          <type>OpenPipe_Adapter_Interface</type>
        </argument>
        <argument line="38">
          <name>$output</name>
          <default><![CDATA[]]></default>
          <type>OpenPipe_Output_Interface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="47" package="">
        <name>run</name>
        <type>function</type>
        <docblock line="44">
          <description><![CDATA[Is responsible for the ENTIRE OpenPipe HTTP pipelining lifecycle - handle all bootstrapping, base client library loading, output gathering, output transmission, Script, and shutdown]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="90" package="">
        <name>bootstrap</name>
        <type>function</type>
        <docblock line="87">
          <description><![CDATA[Performs bootstrapping of OpenPipe runner object and calls the injected OpenPipe_Adapter_Interface bootstrap() method at the very end]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="98" package="">
        <name>clean</name>
        <type>function</type>
        <docblock line="95">
          <description><![CDATA[Performs Script of OpenPipe runner object and calls the injected OpenPipe_Adapter_Interface clean() method at the very end]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </method>
    </class>
  </file>
  <package name="" full_name=""/>
  <package name="Default" full_name="Default"/>
  <package name="OpenPipe" full_name="OpenPipe">
    <package name="Adapter" full_name="OpenPipe\Adapter"/>
    <package name="Output" full_name="OpenPipe\Output"/>
    <package name="Pipelet" full_name="OpenPipe\Pipelet"/>
  </package>
  <namespace name="default" full_name="default"/>
  <marker>todo</marker>
  <marker>fixme</marker>
</project>
